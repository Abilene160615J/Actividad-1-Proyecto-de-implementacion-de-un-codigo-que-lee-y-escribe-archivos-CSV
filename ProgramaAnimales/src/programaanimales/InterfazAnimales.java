/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package programaanimales;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Guadalupe Avendaño
 */
public class InterfazAnimales extends javax.swing.JFrame {
    DefaultTableModel modelo;

    /**
     * Creates new form InterfazAnimales
     */
    public InterfazAnimales() {
        initComponents();
        mostrarTabla();
      cargarDatos();

    }
//Metodo que sirve para mostar
   
    public void mostrarTabla() {
        modelo = new DefaultTableModel();
        modelo.addColumn("Nombre");
        modelo.addColumn("Nombre Cientifico");
        modelo.addColumn("Especie");
        modelo.addColumn("Edad");
        modelo.addColumn("Tipo de alimentacion");
        this.Tabla.setModel(modelo);
    }
    public void cargarDatos(){

        
 
 }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Fondo = new javax.swing.JPanel();
        Logo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        etiquetaNombre = new javax.swing.JLabel();
        textoNombre = new javax.swing.JTextField();
        etiquetaNombreCientifico = new javax.swing.JLabel();
        nombreCientificoTexto = new javax.swing.JTextField();
        etiquetaEspecie = new javax.swing.JLabel();
        ComboBoxEspecie = new javax.swing.JComboBox<>();
        etiquetaEdad = new javax.swing.JLabel();
        textoEdad = new javax.swing.JTextField();
        etiquetaTipoAlimentacion = new javax.swing.JLabel();
        ComboBoxAlimentacion = new javax.swing.JComboBox<>();
        botonGuardar = new javax.swing.JToggleButton();
        botonLimpiar = new javax.swing.JToggleButton();
        botonSalir = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        GuardarCSV = new javax.swing.JToggleButton();
        MOSTRARCSV = new javax.swing.JToggleButton();
        MOSTRARTXT = new javax.swing.JToggleButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        Fondo.setBackground(new java.awt.Color(255, 255, 204));

        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/programaanimales/Animales.jpg"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 204));
        jLabel1.setText("REGISTRO DE ANIMALES");

        etiquetaNombre.setBackground(new java.awt.Color(255, 204, 204));
        etiquetaNombre.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        etiquetaNombre.setText("Nombre:");

        textoNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoNombreActionPerformed(evt);
            }
        });

        etiquetaNombreCientifico.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        etiquetaNombreCientifico.setText("Nombre Científico:");

        etiquetaEspecie.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        etiquetaEspecie.setText("Especie:");

        ComboBoxEspecie.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        ComboBoxEspecie.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Mamiferos", "Aves", "Reptiles", "Ranas y Sapos", "Peces", "Arañas y Alacranes", "Insectos", "Cangrejos y Camarones", "Estrellas y Erizos", "Gusanos ", "Medusas y Corales" }));

        etiquetaEdad.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        etiquetaEdad.setText("Edad (En meses):");

        textoEdad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoEdadActionPerformed(evt);
            }
        });

        etiquetaTipoAlimentacion.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        etiquetaTipoAlimentacion.setText("Tipo de Alimentacion: ");

        ComboBoxAlimentacion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ComboBoxAlimentacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Herbivoros", "Omnivoros", "Carnivoros" }));

        botonGuardar.setBackground(new java.awt.Color(255, 153, 153));
        botonGuardar.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        botonGuardar.setText("Guardar TXT");
        botonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarActionPerformed(evt);
            }
        });

        botonLimpiar.setBackground(new java.awt.Color(255, 0, 51));
        botonLimpiar.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        botonLimpiar.setText("Limpiar campos");
        botonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLimpiarActionPerformed(evt);
            }
        });

        botonSalir.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(Tabla);

        GuardarCSV.setBackground(new java.awt.Color(51, 204, 0));
        GuardarCSV.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        GuardarCSV.setText("Guardar CSV");
        GuardarCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarCSVActionPerformed(evt);
            }
        });

        MOSTRARCSV.setText("MOSTRAR CSV");
        MOSTRARCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MOSTRARCSVActionPerformed(evt);
            }
        });

        MOSTRARTXT.setText("MOSTRAR TXT");
        MOSTRARTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MOSTRARTXTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FondoLayout = new javax.swing.GroupLayout(Fondo);
        Fondo.setLayout(FondoLayout);
        FondoLayout.setHorizontalGroup(
            FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FondoLayout.createSequentialGroup()
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Logo)))
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FondoLayout.createSequentialGroup()
                                    .addComponent(etiquetaTipoAlimentacion)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ComboBoxAlimentacion, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(botonLimpiar))
                                .addGroup(FondoLayout.createSequentialGroup()
                                    .addComponent(etiquetaNombreCientifico, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(nombreCientificoTexto))
                                .addGroup(FondoLayout.createSequentialGroup()
                                    .addComponent(etiquetaNombre)
                                    .addGap(18, 18, 18)
                                    .addComponent(textoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FondoLayout.createSequentialGroup()
                                    .addComponent(etiquetaEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ComboBoxEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(etiquetaEdad)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(textoEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(FondoLayout.createSequentialGroup()
                                .addComponent(botonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MOSTRARTXT)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(GuardarCSV)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MOSTRARCSV)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21))))
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        FondoLayout.setVerticalGroup(
            FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FondoLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Logo)
                .addGap(18, 18, 18)
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaNombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaNombreCientifico)
                    .addComponent(nombreCientificoTexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBoxEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaEspecie)
                    .addComponent(etiquetaEdad)
                    .addComponent(textoEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaTipoAlimentacion)
                    .addComponent(ComboBoxAlimentacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonLimpiar))
                .addGap(9, 9, 9)
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GuardarCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MOSTRARCSV)
                    .addComponent(MOSTRARTXT))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Fondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textoNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoNombreActionPerformed

    private void botonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLimpiarActionPerformed
      limpiarCampos();
    }//GEN-LAST:event_botonLimpiarActionPerformed

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        // TODO add your handling code here:
        int opcSalir = 0;
        opcSalir = JOptionPane.showConfirmDialog(null, "¿Estas seguro que quieres salir ?", "", JOptionPane.YES_NO_OPTION);
        if (opcSalir == 0) {
            System.exit(0);
        } else {
        }
    }//GEN-LAST:event_botonSalirActionPerformed

    public void limpiarTabla(){
    modelo.setRowCount(0);//Limpiar 
    }
    public void limpiarCampos(){
      textoNombre.setText("");
      nombreCientificoTexto.setText("");
      textoEdad.setText("");
      modelo.setRowCount(0);//Limpiar 
    }
    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed
        String info[] = new String[5];
        info[0] = textoNombre.getText();
        info[1] = nombreCientificoTexto.getText();
        info[2] = (String) ComboBoxEspecie.getSelectedItem();
        info[3] = textoEdad.getText();
        info[4] = (String) ComboBoxAlimentacion.getSelectedItem();
        modelo.addRow(info);
        textoNombre.setText(""+textoNombre.getText());
        nombreCientificoTexto.setText(""+nombreCientificoTexto.getText());
        ComboBoxEspecie.setActionCommand("");
        textoEdad.setText(""+textoEdad.getText());
        ComboBoxAlimentacion.setActionCommand("");
        File archivo;// para manipular al archivo
        FileWriter escribir;//Para escribir el archivo
        PrintWriter linea;//Para escribir en el archivo
        String encabezado1="Nombre,NombreCientifico,Especie,Edad,TipodeAlimentacion"+ "\n";
        String nombre = "", nombreCientifico = "", especie = "", edad = "", tipoAlimentacion = "";//variables
        archivo = new File("animales.txt");//preparando el archivo
        if (!archivo.exists()) {
            try {
                //  archivo.createNewFile();
                escribir = new FileWriter(archivo, true);
                if(archivo.length()<=0){
                escribir.write(encabezado1);
                }
                linea = new PrintWriter(escribir);
                nombre= textoNombre.getText();
                nombreCientifico= nombreCientificoTexto.getText();
                especie=(String) ComboBoxEspecie.getSelectedItem();
                edad=textoEdad.getText();
                tipoAlimentacion=(String) ComboBoxAlimentacion.getSelectedItem();
                   escribir.write(nombre + "," + nombreCientifico + "," + especie + "," + edad + "," + tipoAlimentacion + "\n");
                
                
                escribir.close();
            } catch (IOException ex) {
            }
        } else {
            try {

                escribir = new FileWriter(archivo, true);
               // escribir.write(encabezado1);
                linea = new PrintWriter(escribir);
               
                nombre= textoNombre.getText();
                nombreCientifico= nombreCientificoTexto.getText();
                especie=(String) ComboBoxEspecie.getSelectedItem();
                edad=textoEdad.getText();
                tipoAlimentacion=(String) ComboBoxAlimentacion.getSelectedItem();
                
                   escribir.write(nombre + "," + nombreCientifico + "," + especie + "," + edad + "," + tipoAlimentacion + "\n");
                
                escribir.close();
            } catch (IOException ex) {
            }
        }


        // TODO add your handling code here:
    }//GEN-LAST:event_botonGuardarActionPerformed

    private void textoEdadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoEdadActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_textoEdadActionPerformed

    private void GuardarCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarCSVActionPerformed
   String info[] = new String[5];
        info[0] = textoNombre.getText();
        info[1] = nombreCientificoTexto.getText();
        info[2] = (String) ComboBoxEspecie.getSelectedItem();
        info[3] = textoEdad.getText();
        info[4] = (String) ComboBoxAlimentacion.getSelectedItem();
        modelo.addRow(info);
        textoNombre.setText(""+textoNombre.getText());
        nombreCientificoTexto.setText(""+nombreCientificoTexto.getText());
        ComboBoxEspecie.setActionCommand("");
        textoEdad.setText(""+textoEdad.getText());
        ComboBoxAlimentacion.setActionCommand("");
        File archivo;// para manipular al archivo
        FileWriter escribir;//Para escribir el archivo
        PrintWriter linea;//Para escribir en el archivo
        
        String encabezado1="Nombre,NombreCientifico,Especie,Edad,TipodeAlimentacion"+ "\n";
        String nombre = "", nombreCientifico = "", especie = "", edad = "", tipoAlimentacion = "";//variables
        archivo = new File("animales.csv");//preparando el archivo
        if (!archivo.exists()) {
            try {
                //  archivo.createNewFile();
                escribir = new FileWriter(archivo, true);
                if(archivo.length()<=0){
                escribir.write(encabezado1);
                }
                linea = new PrintWriter(escribir);
                nombre= textoNombre.getText();
                nombreCientifico= nombreCientificoTexto.getText();
                especie=(String) ComboBoxEspecie.getSelectedItem();
                edad=textoEdad.getText();
                tipoAlimentacion=(String) ComboBoxAlimentacion.getSelectedItem();
                   escribir.write(nombre + "," + nombreCientifico + "," + especie + "," + edad + "," + tipoAlimentacion + "\n");
                
               
                escribir.close();
            } catch (IOException ex) {
            }
        } else {
            try {
                escribir = new FileWriter(archivo, true);
               // escribir.write(encabezado1);
                linea = new PrintWriter(escribir);
                nombre= textoNombre.getText();
                nombreCientifico= nombreCientificoTexto.getText();
                especie=(String) ComboBoxEspecie.getSelectedItem();
                edad=textoEdad.getText();
                tipoAlimentacion=(String) ComboBoxAlimentacion.getSelectedItem();
                   escribir.write(nombre + "," + nombreCientifico + "," + especie + "," + edad + "," + tipoAlimentacion + "\n");
                
                escribir.close();
            } catch (IOException ex) {
            }
        }

        
                
              
            
    }//GEN-LAST:event_GuardarCSVActionPerformed

    private void MOSTRARCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MOSTRARCSVActionPerformed
        // TODO add your handling code here:
         mostrarTabla();
        File archivo;// para manipular al archivo
        archivo = new File("\\Users\\Guadalupe Avendaño\\Documents\\SemestreITVO Abilene Avendaño\\Administracion y Organizacion de datos\\Unidad II\\ProgramaAnimales\\animales.csv");//preparando el archivo
        if (archivo.exists()) {
            try {
                int a=0;
                Scanner scanner = new Scanner(archivo);
                while (scanner.hasNextLine()) {
                    String linea = scanner.nextLine();
                    Scanner delimitar = new Scanner(linea);
                    delimitar.useDelimiter("\\s*,\\s*");
                    String info[] = new String[5];
                    info[0] = delimitar.next();//Tome la cadena que detecte hasta que encuetre la coma una
                    info[1] = delimitar.next();// vez que encuentre esa lee la siguiente y lguarda en el arreglo
                    info[2] = delimitar.next();
                    info[3] = delimitar.next();
                    info[4] = delimitar.next();
                   if(a!=0){
                    modelo.addRow(info);}
                     a++;   
                }
                scanner.close();
            } catch (FileNotFoundException e) {
                JOptionPane.showMessageDialog(null, "Archivo no encontrado");
            }
        }
    }//GEN-LAST:event_MOSTRARCSVActionPerformed

    private void MOSTRARTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MOSTRARTXTActionPerformed
        // TODO add your handling code here:
         mostrarTabla();
        File archivo;// para manipular al archivo
        archivo = new File("\\Users\\Guadalupe Avendaño\\Documents\\SemestreITVO Abilene Avendaño\\Administracion y Organizacion de datos\\Unidad II\\ProgramaAnimales\\animales.txt");//preparando el archivo
        if (archivo.exists()) {
            try {
                int a=0;
                Scanner scanner = new Scanner(archivo);
                while (scanner.hasNextLine()) {
                    String linea = scanner.nextLine();
                    Scanner delimitar = new Scanner(linea);
                    delimitar.useDelimiter("\\s*,\\s*");
                    String info[] = new String[5];
                    info[0] = delimitar.next();//Tome la cadena que detecte hasta que encuetre la coma una
                    info[1] = delimitar.next();// vez que encuentre esa lee la siguiente y lguarda en el arreglo
                    info[2] = delimitar.next();
                    info[3] = delimitar.next();
                    info[4] = delimitar.next();
                    if(a!=0){
                    modelo.addRow(info);}
                     a++;   
                }
                scanner.close();
            } catch (FileNotFoundException e) {
                JOptionPane.showMessageDialog(null, "Archivo no encontrado");
            }
        }
    }//GEN-LAST:event_MOSTRARTXTActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazAnimales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazAnimales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazAnimales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazAnimales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazAnimales().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxAlimentacion;
    private javax.swing.JComboBox<String> ComboBoxEspecie;
    private javax.swing.JPanel Fondo;
    private javax.swing.JToggleButton GuardarCSV;
    private javax.swing.JLabel Logo;
    private javax.swing.JToggleButton MOSTRARCSV;
    private javax.swing.JToggleButton MOSTRARTXT;
    private javax.swing.JTable Tabla;
    private javax.swing.JToggleButton botonGuardar;
    private javax.swing.JToggleButton botonLimpiar;
    private javax.swing.JToggleButton botonSalir;
    private javax.swing.JLabel etiquetaEdad;
    private javax.swing.JLabel etiquetaEspecie;
    private javax.swing.JLabel etiquetaNombre;
    private javax.swing.JLabel etiquetaNombreCientifico;
    private javax.swing.JLabel etiquetaTipoAlimentacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nombreCientificoTexto;
    private javax.swing.JTextField textoEdad;
    private javax.swing.JTextField textoNombre;
    // End of variables declaration//GEN-END:variables

}
